[project]
name = "openvino"
dynamic = ["version", "entry-points", "scripts"]
description = "OpenVINO(TM) Runtime"
readme = {file = "README.md", content-type="text/markdown"}
license = {text = "OSI Approved :: Apache Software License"}
authors = [
    { name = "OpenVINO Developers", email = "openvino@intel.com" },
]
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"

dependencies = [
    "numpy>=1.16.6,<2.3.0",
    "openvino-telemetry>=2023.2.1,<=2025.1.0",
    "packaging<=25.0"
]

[tool.poetry]
package-mode = false

[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "supplemental"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = ">=5.0.0,<=8.3.5"
pytest-xdist = ">=2.2.0,<=3.7.0"
pytest-html = ">=3.0.0,<=4.1.1"
pytest-dependencies = ">=0.5.0,<=0.6.0"
pytest-timeout = ">=2.0.0,<=2.4.0"
pytest-forked = {version = "*", markers = "sys_platform != 'win32'"}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
bandit = ">=1.6.0,<=1.8.3"
black = ">=23.1.0,<=25.1.0"
flake8 = ">=5.0.0,<=7.2.0"
flake8-annotations-complexity = "<=0.1.0"
flake8-broken-line = "<=1.0.0"
flake8-bugbear = "<=24.12.12"
flake8-class-attributes-order = "<=0.3.0"
flake8-comprehensions = "<=3.16.0"
flake8-debugger = "<=4.1.2"
flake8-docstrings = "<=1.7.0"
flake8-eradicate = "<=1.5.0"
flake8-executable = "<=2.1.3"
flake8-expression-complexity = "<=0.0.11"
flake8-print = "<=5.0.0"
flake8-pytest-style = "<=2.1.0"
flake8-rst-docstrings = "<=0.3.1"
flake8-string-format = "<=0.3.0"
flake8-variables-names = "<=0.0.6"
flake8-builtins = "<2.6.0"
flake8-coding = "<=1.3.2"
flake8-pep3101 = "<=2.1.0"
flake8-quotes = "<=3.4.0"
pyright = "<=1.1.401"
pre-commit = "<=4.2.0"
tox = "<=4.26.0"
pygments = "<=2.16.1"
mypy = "<=1.12.0"
pep8-naming = "<=0.13.0"
pillow = "<=10.3.0"
pydocstyle = "<=6.3.0"
radon = "<=5.0.0"
retrying = "<=1.3.3"
types-setuptools = "<=68.0.0"
pybind11-stubgen = "<=2.12.0"
pre-commit = "<=4.2.0"

[build-system]
requires = [
    "setuptools>=70,<=80.9.0", 
    "wheel<=0.45.1",
    "cmake<=3.31.6", 
    "patchelf<=0.17.2.2; sys_platform == 'linux' and platform_machine == 'x86_64'"
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
license-files = [
    "LICENSE",
    "licensing/runtime-third-party-programs.txt",
    "licensing/onetbb_third-party-programs.txt",
    "licensing/onednn_third-party-programs.txt",
]

[tool.setuptools.packages.find]
where = ["./src/bindings/python"]
include = ["pyopenvino"] 

[tool.black]
line-length = 160
include = '\.pyi?$'

[tool.pyright]
include = ["src/bindings/python/src"]
exclude = ["src/bindings/python/src/pyopenvino"]
ignore = [
    "**/ops.py",
    "**/utils/data_helpers/data_dispatcher.py",
    "**/utils/types.py",
    "**/utils/decorators.py",
    "**/frontend/frontend.py",
    "**/_ov_api.py",
    "**/_op_base.py",
    "**/utils/node_factory.py",
    "**/frontend/tensorflow",
    "**/frontend/pytorch",
    "**/frontend/jax"
]
reportInvalidTypeForm = false
reportMissingModuleSource = false
reportFunctionMemberAccess = false
reportAttributeAccessIssue = false
reportMissingImports = false
reportIncompatibleMethodOverride = false
